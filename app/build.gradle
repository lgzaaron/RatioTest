apply plugin: 'com.android.application'
apply plugin: 'com.android.application'
//制作补丁时将这个打开，auto-patch-plugin紧跟着com.android.application
//apply plugin: 'auto-patch-plugin'
//apply plugin: 'robust'



android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.administrator.myapplication"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    repositories {
        flatDir {
            dirs "libs"
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.android.support:design:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(path: ':mylib')
    implementation(name:'lgztestlibrary', ext:'aar')
    implementation 'com.meituan.robust:robust:0.4.87'

//Copy类型
    task makeJar(type: Copy) {
        //删除存在的
        delete 'build/libs/mysdk.jar'
        //设置拷贝的文件
//    from('build/intermediates/bundles/release/')
        from('build/intermediates/intermediate-jars/debug/')
        //打进jar包后的文件目录
        into('build/libs/')
        //将classes.jar放入build/libs/目录下
        //include ,exclude参数来设置过滤
        //（我们只关心classes.jar这个文件）
        include('classes.jar')
        //重命名
        rename('classes.jar', 'myfirstsdk.jar')
    }

    makeJar.dependsOn(build)
//在终端执行生成JAR包
// gradlew makeJar
}

